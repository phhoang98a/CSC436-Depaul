{"ast":null,"code":"var _jsxFileName = \"/Users/phanhenry/Desktop/CSC436/code/hw/Assignment-3/src/components/TodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoForm({\n  username,\n  setTodoList,\n  todoList\n}) {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const handleAddTodo = () => {\n    if (!title) {\n      alert('Title is required');\n      return;\n    }\n    setTodoList([...todoList, {\n      title,\n      description,\n      author: username,\n      dateCreated: Date.now(),\n      complete: false,\n      dateCompleted: \"\"\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add new Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Description\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"author\",\n      value: username,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoForm, \"1UKQWTfo2RWmkwPNsekAdQbvqFk=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoForm","username","setTodoList","todoList","_s","title","setTitle","description","setDescription","handleAddTodo","alert","author","dateCreated","Date","now","complete","dateCompleted","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","readOnly","onClick","_c","$RefreshReg$"],"sources":["/Users/phanhenry/Desktop/CSC436/code/hw/Assignment-3/src/components/TodoForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction TodoForm({username, setTodoList, todoList}) {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  const handleAddTodo = () => {\n    if (!title) {\n      alert('Title is required');\n      return;\n    }\n    setTodoList([...todoList,{\n      title,\n      description,\n      author: username,\n      dateCreated: Date.now(),\n      complete: false,\n      dateCompleted:\"\"\n    }]);\n  };\n\n  return (\n    <div>\n      <h2>Add new Todo</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Title\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n      />\n      <br></br>\n      <input\n        type=\"text\"\n        placeholder=\"Description\"\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n      />\n      <br></br>\n      <input\n        type=\"text\"\n        placeholder=\"author\"\n        value={username}\n        readOnly\n      />\n      <br></br>\n      <button onClick={handleAddTodo}>Add Todo</button>\n    </div>\n  );\n}\n\nexport default TodoForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAC;EAACC,QAAQ;EAAEC,WAAW;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACnD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMY,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAACJ,KAAK,EAAE;MACVK,KAAK,CAAC,mBAAmB,CAAC;MAC1B;IACF;IACAR,WAAW,CAAC,CAAC,GAAGC,QAAQ,EAAC;MACvBE,KAAK;MACLE,WAAW;MACXI,MAAM,EAAEV,QAAQ;MAChBW,WAAW,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACvBC,QAAQ,EAAE,KAAK;MACfC,aAAa,EAAC;IAChB,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAEnB,KAAM;MACboB,QAAQ,EAAGC,CAAC,IAAKpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,aAAa;MACzBC,KAAK,EAAEjB,WAAY;MACnBkB,QAAQ,EAAGC,CAAC,IAAKlB,cAAc,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACFtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,QAAQ;MACpBC,KAAK,EAAEvB,QAAS;MAChB2B,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTtB,OAAA;MAAQ8B,OAAO,EAAEpB,aAAc;MAAAQ,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV;AAACjB,EAAA,CA9CQJ,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAgDjB,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}